class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        if grid==[]:
            return 0
        
        n_row = len(grid)
        n_col = len(grid[0])
        
        
        
        grid_new = [['0'] * (n_col+1)] +[['0']+row for row in grid]
        temp = [[0] * (n_col+1) for _ in range(n_row+1)]
        k=0
        real_k = 0
        for i in range(1,n_row+1):
            for j in range(1,n_col+1):
                if grid_new[i][j]=='0':
                    pass
                else:
                    if grid_new[i-1][j]=='1':
                        if grid_new[i][j-1]=='0':
                            temp[i][j] = temp[i-1][j]

                        else:
                            if temp[i-1][j]==temp[i][j-1]:
                                temp[i][j]=temp[i-1][j]

                            else:
                                real_k-=1
                                a_min = min(temp[i-1][j],temp[i][j-1])
                                a_max = max(temp[i-1][j],temp[i][j-1])
                                temp[i][j] = a_max 

                                for i_new in range(1,i+1):
                                    for j_new in range(1,n_col+1):
                                        if temp[i_new][j_new] == a_min:
                                            temp[i_new][j_new] = a_max



                    else:
                        if grid_new[i][j-1]=='1':
                            temp[i][j] = temp[i][j-1]

                        else:
                            k+=1
                            temp[i][j]=k
                            real_k+=1
        return real_k
